{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/","title":"k-Nearest Neighbor","text":"<p>Source code</p> <p>k-NN (k-Nearest Neighbors) adalah salah satu algoritma machine learning yang paling sederhana yang digunakan untuk melakukan klasifikasi atau regresi pada data.</p> <p> \\( \\begin{align*} \u27e8x^{[i]}, y^{[i]}\u27e9 \u2208 D \\qquad (|D| = n) \\tag{1} \\end{align*} \\) </p>"},{"location":"data_sciences/k_nearest_neighbors/#component-of-learning","title":"Component of learning","text":"<p>k-NN tidak melibatkan proses pembelajaran seperti pada algoritma pembelajaran mesin lainnya. Sebaliknya, k-NN hanya menyimpan data training dan menggunakan data tersebut untuk melakukan prediksi pada data test. Oleh karena itu, k-NN sering dianggap sebagai algoritma lazy learning atau instance-based learning.</p>"},{"location":"data_sciences/k_nearest_neighbors/#hypothesis","title":"Hypothesis","text":"<p>Kumpulan dari tetangga terdekat</p> <p>Hyperparameter:</p> <ul> <li> <p>Nilai k: Menentukan jumlah tetangga terdekat yang akan digunakan untuk melakukan klasifikasi atau regresi. Nilai k yang lebih besar cenderung menghasilkan keputusan yang lebih stabil, tetapi dapat mengabaikan perbedaan yang lebih kecil antara kelas atau nilai target.</p> </li> <li> <p>Metrik jarak: Menentukan metode pengukuran jarak antara titik data. Beberapa metrik jarak yang umum digunakan adalah <code>euclidean distance</code>, <code>manhattan distance</code>, dan <code>minkowski distance</code>. Secara umum kita menggunakan rumus dari <code>minkowski distance</code> di bawah. Apabila kita menggunakan m=2, artinya sama saja kita menggunakan <code>euclidean distance</code>. Bila menggunakan m=1, artinya kita mengguanakan <code>manhattan distance</code>.</p> </li> </ul> <p> \\( \\begin{align*} d(x^{(i)}, x^{(j)}) = \\left( \\sum_{k=1}^{p} \\left| x_k^{(i)} - x_k^{(j)} \\right| ^m \\right) ^{1/m}  \\tag{2} \\end{align*} \\) </p> <ul> <li>Bobot (weight): Menentukan apakah tetangga terdekat akan diberi bobot berdasarkan jarak mereka. Bobot yang umum digunakan adalah <code>uniform</code> dan <code>distance</code>. Pada bobot <code>uniform</code> artinya kita memberlakukan sama semua tetangga. Sedangkan pada bobot <code>distance</code>, semakin dekat jarak tetangga dengan titik yang diuji, maka semakin besar pengaruh tetangga tersebut. Kita akan menggunakan persamaan inverse squared distance by Tom Mitchell untuk menhgitung bobot <code>distance</code> dengan persamaan sebagai berikut:  <p>\\( \\begin{align*} w^{(i)} = \\frac{1}{d(x^{(i)}, x^{(j)})^2}  \\tag{3} \\end{align*} \\) </p>"},{"location":"data_sciences/k_nearest_neighbors/#paramaters","title":"Paramaters","text":"<p>Tidak ada, karena k-NN termasuk instance-based learning atau nonparametric method</p>"},{"location":"data_sciences/k_nearest_neighbors/#learning-algorithm","title":"Learning algorithm","text":"<p>Dalam k-NN, tidak ada model pembelajaran yang dihasilkan selama fase training. Oleh karena itu, k-NN tidak memiliki learning algorithm.</p>"},{"location":"data_sciences/k_nearest_neighbors/#pseudocode","title":"Pseudocode","text":""},{"location":"data_sciences/k_nearest_neighbors/#fitting-model","title":"Fitting model","text":""},{"location":"data_sciences/k_nearest_neighbors/#input","title":"Input:","text":"<ul> <li>D: dataset training yang terdiri dari n titik data dengan m fitur dan label kelas atau nilai target</li> </ul>"},{"location":"data_sciences/k_nearest_neighbors/#output","title":"Output:","text":"<ul> <li>model k-NN yang terdiri dari dataset training D</li> </ul>"},{"location":"data_sciences/k_nearest_neighbors/#proses","title":"Proses:","text":"<pre><code>for i = 1, \u2026, n in n-dimensional training dataset D:\nstore training example \u27e8X[i], y[i]\u27e9\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/#cari-neighbors","title":"Cari neighbors","text":""},{"location":"data_sciences/k_nearest_neighbors/#input_1","title":"Input:","text":"<ul> <li>model: dataset training yang telah disimpan sebagai model k-NN</li> <li>x: titik data test yang akan diprediksi kelasnya</li> <li>k: jumlah tetangga terdekat yang akan digunakan untuk melakukan klasifikasi</li> <li>p: pangkat dari metrik jarak yang digunakan untuk menghitung jarak antara titik data</li> </ul>"},{"location":"data_sciences/k_nearest_neighbors/#output_1","title":"Output","text":"<ul> <li>k-closest_point: daftar point tetangga terdekat denga titik x</li> <li>k-closest_distance: daftar jarak tetangga terdekat denga titik x</li> </ul>"},{"location":"data_sciences/k_nearest_neighbors/#proses_1","title":"Proses:","text":"<pre><code>initialize k-closest_point = []\ninitialize k-closest_distance = []\nfor i = 1, \u2026, n in n-dimensional model:\ncurrent distance := d(x, x[i])\nif current distance &lt; k-closest_distance[-1]:\nk-closest_distance[-1] = current distance\nk-closest_point[-1] = x[i]\nsort k-closest_distance, ascending order\nsort k-closest_point, by k-closest_distance\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/#clasification","title":"Clasification","text":""},{"location":"data_sciences/k_nearest_neighbors/#input_2","title":"Input:","text":"<ul> <li>model: dataset training yang telah disimpan sebagai model k-NN</li> <li>x: titik data test yang akan diprediksi kelasnya</li> <li>w: bobot dari setiap data</li> </ul>"},{"location":"data_sciences/k_nearest_neighbors/#output_2","title":"Output","text":"<ul> <li>y_pred: kelas prediksi dari titik data uji x</li> </ul>"},{"location":"data_sciences/k_nearest_neighbors/#proses_2","title":"Proses:","text":"<pre><code>compute y_pred by (4)\n</code></pre> <p> \\( \\begin{align*} Pr(Y = j | X = x_0) = \\frac{1}{K} \\sum_{i\u2208N_0} w^{(i)} I (y_i = j) \\tag{4} \\end{align*} \\) </p>"},{"location":"data_sciences/k_nearest_neighbors/#regretion","title":"Regretion","text":""},{"location":"data_sciences/k_nearest_neighbors/#input_3","title":"Input:","text":"<ul> <li>model: dataset training yang telah disimpan sebagai model k-NN</li> <li>x: titik data test yang akan diprediksi kelasnya</li> <li>w: bobot dari setiap data</li> </ul>"},{"location":"data_sciences/k_nearest_neighbors/#output_3","title":"Output","text":"<ul> <li>y_pred: nilai target prediksi dari titik data uji x</li> </ul>"},{"location":"data_sciences/k_nearest_neighbors/#proses_3","title":"Proses:","text":"<pre><code>compute y_pred by (5)\n</code></pre> <p> \\( \\begin{align*} \\hat{f}(x_0) = \\frac{\\sum_{i=1}^{k} w^{(i)} y_i}{\\sum_{i=1}^{k} w^{(i)}}  \\tag{5} \\end{align*} \\) </p>"},{"location":"data_sciences/k_nearest_neighbors/#implementasi","title":"Implementasi","text":""},{"location":"data_sciences/k_nearest_neighbors/#simple-application","title":"Simple Application","text":""},{"location":"data_sciences/k_nearest_neighbors/#import","title":"Import","text":"<pre><code>from sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n</code></pre> <pre><code>import sys\nsys.path.append('../../advanced_ml')\nfrom ml_from_scratch.neighbors import KNeighborsClassifier as ScratchKNClassifier\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/#load-data","title":"Load data","text":"<pre><code>iris = load_iris()\nX = iris.data\ny = iris.target\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/#split-data","title":"Split data","text":"<pre><code>X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=13)\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/#simple-model","title":"Simple model","text":"<pre><code>clf = ScratchKNClassifier()\nclf.fit(X_train, y_train)\ny_pred = clf.predict(X_test)\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/#accuracy","title":"Accuracy","text":"<pre><code>num_correct_pred = (y_pred == y_test).sum()\naccuracy = (num_correct_pred / y_test.shape[0]) * 100\nprint('model accuracy: %.2f%%' % accuracy)\n</code></pre> <pre><code>&gt;&gt; model accuracy: 89.47%\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/#experiment-dengan-hyperparameter","title":"Experiment dengan hyperparameter","text":""},{"location":"data_sciences/k_nearest_neighbors/#hyperparameter-k-jumlah-tetangga-terdekat","title":"Hyperparameter k (jumlah tetangga terdekat)","text":"<pre><code>ks = [3, 5, 7, 9]\nk_accurations = []\nfor k in ks:\nclf = ScratchKNClassifier(n_neighbors=k)\nclf.fit(X_train, y_train)\ny_pred = clf.predict(X_test)\nnum_correct_pred = (y_pred == y_test).sum()\naccuracy = (num_correct_pred / y_test.shape[0]) * 100\nk_accurations.append(accuracy)\n</code></pre> <pre><code>ax = sns.barplot(x=ks, y=k_accurations)\nax.set(xlabel='k-neighbors', ylabel='accuracy')\nax.bar_label(ax.containers[0])\nplt.show()\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/#hyperparameter-p-power-dari-minkowski-distance","title":"Hyperparameter p (power dari minkowski distance)","text":"<pre><code>ps = [1, 2]\np_accurations = []\nfor p in ps:\nclf = ScratchKNClassifier(p=p)\nclf.fit(X_train, y_train)\ny_pred = clf.predict(X_test)\nnum_correct_pred = (y_pred == y_test).sum()\naccuracy = (num_correct_pred / y_test.shape[0]) * 100\np_accurations.append(accuracy)\n</code></pre> <pre><code>ax = sns.barplot(x=ps, y=p_accurations)\nax.set(xlabel='power of minkowski distance', ylabel='accuracy')\nax.bar_label(ax.containers[0])\nplt.show()\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/#hyperparameter-weights","title":"Hyperparameter weights","text":"<pre><code>ws = ['uniform', 'distance']\nw_accurations = []\nfor w in ws:\nclf = ScratchKNClassifier(weights=w)\nclf.fit(X_train, y_train)\ny_pred = clf.predict(X_test)\nnum_correct_pred = (y_pred == y_test).sum()\naccuracy = (num_correct_pred / y_test.shape[0]) * 100\nw_accurations.append(accuracy)\n</code></pre> <pre><code>ax = sns.barplot(x=ws, y=w_accurations)\nax.set(xlabel='weight', ylabel='accuracy')\nax.bar_label(ax.containers[0])\nplt.show()\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/#membandingkan-dengan-library-sklearn","title":"Membandingkan dengan library sklearn","text":""},{"location":"data_sciences/k_nearest_neighbors/#prediksi-menggunakan-sklearn-model","title":"Prediksi menggunakan sklearn model","text":"<pre><code>sklearn_model = KNeighborsClassifier(n_neighbors=3, p=1, weights='distance')\nsklearn_model.fit(X_train, y_train)\nsklearn_pred = sklearn_model.predict(X_test)\n</code></pre> <pre><code>sklearn_num_correct_pred = (sklearn_pred == y_test).sum()\nsklearn_accuracy = (sklearn_num_correct_pred / y_test.shape[0]) * 100\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/#prediksi-menggunakan-scratch-model","title":"Prediksi menggunakan scratch model","text":"<pre><code>scratch_model = ScratchKNClassifier(n_neighbors=3, p=1, weights='distance')\nscratch_model.fit(X_train, y_train)\nscratch_pred = scratch_model.predict(X_test)\n</code></pre> <pre><code>scratch_num_correct_predictions = (scratch_pred == y_test).sum()\nscratch_accuracy = (scratch_num_correct_predictions / y_test.shape[0]) * 100\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/#bandingkan-hasil","title":"Bandingkan hasil","text":"<pre><code>print('sklearn model accuracy: %.2f%%' % sklearn_accuracy)\nprint('scratch model accuracy: %.2f%%' % scratch_accuracy)\n</code></pre> <pre><code>&gt;&gt; sklearn model accuracy: 97.37%\n&gt;&gt; scratch model accuracy: 97.37%\n</code></pre>"},{"location":"data_sciences/k_nearest_neighbors/#references","title":"References","text":"<ul> <li>Materi kelas Pacmann Advanced Machine Learning : Nearest Neighbor</li> <li>STAT 479: Machine Learning Lecture Notes</li> </ul>"},{"location":"data_sciences/k_nearest_neighbors/#sorce-code","title":"Sorce code","text":"<ul> <li>sleep health analysis</li> </ul>"},{"location":"data_sciences/ml_process/","title":"Send Artificial Object to Moon - Survival Prediction","text":""},{"location":"data_sciences/ml_process/#permasalah-bisnis","title":"Permasalah bisnis","text":"<p>Sebuah perusahaan antariksa ingin memastikan keberhasilan peluncuran objek-artifisialnya ke bulan dengan meminimalkan risiko dan kerugian. Mereka ingin mengembangkan model prediktif yang dapat membantu mereka mengevaluasi peluncuran potensial dan mengidentifikasi faktor-faktor yang dapat mempengaruhi keberhasilannya.</p>"},{"location":"data_sciences/ml_process/#objective-bisnis","title":"Objective bisnis","text":"<p>Mengembangkan model prediktif yang dapat membantu perusahaan antariksa dalam mengidentifikasi peluncuran yang memiliki tingkat keberhasilan yang tinggi, mengurangi risiko kegagalan, dan memastikan bahwa objek-artifisial mencapai tujuan mereka di bulan.</p>"},{"location":"data_sciences/ml_process/#metrik-bisnis","title":"Metrik bisnis","text":"<p>Tingkat keberhasilan misi: Persentase misi pengiriman objek ke bulan yang berhasil mencapai tujuan mereka tanpa masalah yang signifikan.</p>"},{"location":"data_sciences/ml_process/#solusi-machine-learning","title":"Solusi machine learning","text":"<p>Kita akan menggunakan classification untuk memprediksi apakah objek yang dikirim ke bulan akan selamat atau gagal dengan memanfaatkan data historis selama beberapa dekade terakhir. Kita akan menggunakan algoritma <code>RandomForestClassifier</code> dan <code>KNeighborsClassifier</code>. Untuk mencari parameter terbaik untuk masing-masing algoritma, kita akan menggunakan <code>GridSearchCV</code>. Dan kita akan menghitung akurasi kedua model tersebut dengan <code>cross_val_score</code>. Terakhir kita akan memilih model mana yang lebih baik berdasarkan nilai akurasi</p>"},{"location":"data_sciences/ml_process/#metrik-machine-learning","title":"Metrik machine learning","text":"<p>Kita akan menggunakan metrik akurasi untuk mengevaluasi model machine learning yang kita buat.</p> <p> \\( \\begin{align*} \\text{akurasi} = \\frac{\\text{jumlah prediksi yang benar}}{\\text{jumlah prediksi}} \\end{align*} \\) </p>"},{"location":"data_sciences/ml_process/#references","title":"References","text":"<ul> <li>Materi kelas Pacmann Machine Learning Process</li> <li>Moon objects survival AutoViz+CatBoost+SHAP</li> </ul>"},{"location":"data_sciences/ml_process/#sorce-code","title":"Sorce code","text":"<ul> <li>Github</li> </ul>"},{"location":"data_sciences/recommender_system/","title":"Anime Recommender System","text":"<p>Source code</p>"},{"location":"data_sciences/recommender_system/#business-objectives","title":"Business Objectives","text":"<p>Dunia anime sangat luas, ada hingga ribuan judul yang tersedia. Penggemar anime sering kali harus bergantung pada pengetahuan mereka sendiri atau rekomendasi dari teman-teman untuk menemukan anime baru. Ini dapat menjadi tantangan, terutama bagi penggemar yang baru mengenal anime. Tanpa panduan, mungkin merasa sulit untuk menemukan anime yang sesuai dengan selera mereka diantara banyak pilihan.</p> <p>Memilih anime yang tidak sesuai dengan preferensi pribadi dapat mengakibatkan pengalaman menonton yang kurang memuaskan. Beberapa penggemar mungkin menghabiskan waktu menonton anime yang akhirnya tidak mereka nikmati. Beberapa anime populer mungkin mendapatkan banyak perhatian, sementara anime yang bagus tetapi kurang dikenal bisa saja terlupakan.</p> <p>Salah satu solusi untuk mengatasi masalah tersebut adalah dengan mengembangkan algoritma rekomendasi yang dapat menganalisis preferensi penggemar berdasarkan riwayat menonton dan berdasarkan penilaian terhadap anime yang di tonton. Kemudian algoritma ini memberikan rekomendasi anime yang sesuai. Ini dapat membantu penggemar anime menemukan anime baru yang lebih cocok dengan minat mereka dan menghindari potensi kekecewaan.</p>"},{"location":"data_sciences/recommender_system/#recommender-system","title":"Recommender System","text":"<p>Karena setiap orang mempunyai karakter kesukaan yang berbeda-beda, maka rekomendasi yang tepat adalah personalized recomender system. Kemudian kita akan menggunakan sistem hybrid yang merupakan gabungan dari content based filtering dan colaborative filtering.</p>"},{"location":"data_sciences/recommender_system/#content-based-filtering","title":"Content based filtering","text":"<p>Content based filtering adalah teknik dalam sistem rekomendasi yang memberikan rekomendasi berdasarkan kesesuaian antara preferensi pengguna dengan karakteristik anime yang telah diketahui sebelumnya.</p> <p> </p>"},{"location":"data_sciences/recommender_system/#workflow","title":"Workflow","text":"<ol> <li> <p>Feature extraction</p> <p>Sistem mengumpulkan data mengenai karakteristik dari setiap anime. Dalam projek ini kita akan menggunakan genre, type, jumlah episode, rating, dan jumlah member.</p> </li> <li> <p>User profile</p> <p>Sistem memahami preferensi pengguna dengan riwayat anime yang ditonton. Dalam hal ini kita akan melihat anime terakhir yang ditonton.</p> </li> <li> <p>Feature comparison</p> <p>Sistem membandingkan vektor fitur dari user profile dengan vektor fitur dari anime yang tersedia.</p> </li> <li> <p>Rekomendasi</p> <p>Berdasarkan perbandingan fitur, sistem memberikan rekomendasi kepada pengguna. Anime yang memiliki kesesuaian tertinggi dengan profil pengguna akan direkomendasikan.</p> </li> </ol>"},{"location":"data_sciences/recommender_system/#modelling","title":"Modelling","text":"<ol> <li> <p>Importing data</p> <ol> <li>Load data</li> <li>Check data shapes and types</li> <li>Check duplicates data</li> <li>Data cleaning</li> </ol> </li> <li> <p>Data preparation</p> <ol> <li>Numerical data</li> <li>Categorical data (with OHE)</li> <li>Combine numerical and categorical data</li> </ol> </li> <li> <p>Content based recommendations: using last activity data</p> <ol> <li>Create similarity functions<ul> <li>Jaccard similarity</li> <li>Euclidean similarity</li> <li>Cosine similarity</li> <li>Pearson correlation similarity</li> </ul> </li> <li>Find similar anime based on user last watch anime</li> </ol> </li> </ol>"},{"location":"data_sciences/recommender_system/#collaborative-filtering-dengan-funk-svd","title":"Collaborative filtering dengan Funk SVD","text":"<p>Funk SVD (Singular Value Decomposition) adalah salah satu teknik yang digunakan dalam collaborative filtering untuk menghasilkan rekomendasi personalisasi kepada pengguna berdasarkan data historis anime yang ditonton.</p> <p> </p>"},{"location":"data_sciences/recommender_system/#workflow_1","title":"Workflow","text":"<ol> <li> <p>Pengumpulan data</p> <p>Data penggunaan yang mencakup interaksi pengguna dengan anime (misalnya rating yang diberikan) dikumpulkan dan disimpan dalam bentuk utility matrix.</p> </li> <li> <p>Inisialisasi</p> <p>Utility matrix diinisialisasi dengan nilai-nilai awal yang kecil atau secara acak</p> </li> <li> <p>Optimisasi</p> <p>Model Funk SVD melatih utility matrix untuk meminimalkan kesalahan prediksi terhadap data penggunaan yang ada. Ini dilakukan dengan mengoptimalkan fungsi tujuan yang mencoba meminimalkan perbedaan antara nilai aktual dan nilai prediksi dalam utility matrix.</p> </li> <li> <p>Penyesuaian faktor laten</p> <p>Selama pelatihan, model Funk SVD menyesuaikan utility matrix dengan menghasilkan faktor-faktor laten yang mewakili karakteristik tersembunyi dari pengguna dan anime. Model ini mencoba untuk memahami pola-pola yang mendasari preferensi pengguna dan sifat anime.</p> </li> <li> <p>Prediksi rekomendasi</p> <p>Setelah pelatihan selesai, model Funk SVD dapat digunakan untuk membuat prediksi peringkat atau perkiraan rating pengguna untuk anime yang belum dia interaksikan. Ini dilakukan dengan mengalikan matriks faktor laten pengguna dan matriks faktor laten anime yang diinginkan.</p> </li> <li> <p>Rekomendasi</p> <p>Model menghasilkan daftar rekomendasi berdasarkan prediksi peringkat. Anime dengan prediksi peringkat tertinggi direkomendasikan kepada pengguna.</p> </li> <li> <p>Evaluasi dan umpan balik</p> <p>Kualitas rekomendasi dievaluasi dengan mengukur sejauh mana prediksi model cocok dengan preferensi pengguna sebenarnya. Dalam siklus ini, umpan balik dari pengguna dapat digunakan untuk meningkatkan kualitas rekomendasi di masa mendatang.</p> </li> </ol>"},{"location":"data_sciences/recommender_system/#modelling_1","title":"Modelling","text":"<ol> <li> <p>Importing data</p> <ol> <li>Load data</li> <li>Check data shapes and types</li> <li>Handle duplicates data</li> </ol> </li> <li> <p>Modelling: funk SVD</p> <ol> <li>Mapping <code>user</code> and <code>anime</code></li> <li>Generate user factor (\ud835\udc5d\ud835\udc62) and item factor (\ud835\udc5e\ud835\udc56)</li> <li>Training</li> </ol> </li> <li> <p>Predictions/generating recommendation</p> <ol> <li>Predict recommendation of user-i to unrated item-j</li> <li>Predict recommendation of user-i to all their unrated items</li> </ol> </li> </ol>"},{"location":"data_sciences/recommender_system/#implementation","title":"Implementation","text":""},{"location":"data_sciences/recommender_system/#data-source","title":"Data source","text":"<p>Dataset dalam project ini diambil dari Anime Recommendations Database di kaggle. Dataset dapat dilihat pada link ini.</p>"},{"location":"data_sciences/recommender_system/#content-based-filtering_1","title":"Content based filtering","text":"<p>Dibawah merupakan hasil rekomendasi content based filtering dengan menggunakan berbagai fitur dan fungsi jarak. Walaupun semuanya merupakan rekomendasi terhadap anime <code>Fullmetal Alchemist: Brotherhood</code>, namun terdapat perbedaan pada rekomendasi yang diberikan.</p>"},{"location":"data_sciences/recommender_system/#categorical-features-jaccard-similarity-function","title":"Categorical features + jaccard similarity function","text":""},{"location":"data_sciences/recommender_system/#numerical-features-euclidean-similarity-function","title":"Numerical features + euclidean similarity function","text":""},{"location":"data_sciences/recommender_system/#numerical-categorical-features-pearson-similarity-function","title":"Numerical + categorical features + pearson similarity function","text":""},{"location":"data_sciences/recommender_system/#collaboration-filtering","title":"Collaboration filtering","text":"<p>Berikut hasil rekomendasi dari colaborative filtering untuk user id 100 dan user id 500.</p>"},{"location":"data_sciences/recommender_system/#recommendation-for-user-id-100","title":"Recommendation for user id 100","text":""},{"location":"data_sciences/recommender_system/#recommendation-for-user-id-500","title":"Recommendation for user id 500","text":""},{"location":"data_sciences/recommender_system/#references","title":"References","text":"<ul> <li>Materi kelas Pacmann Recommender System</li> <li>Introduction to Movie Recommendation System for Beginners</li> </ul>"},{"location":"data_sciences/recommender_system/#sorce-code","title":"Sorce code","text":"<ul> <li>recommender system</li> </ul>"},{"location":"statistics/sleep_health/","title":"Sleep Health Analysis","text":"<p>Source code</p>"},{"location":"statistics/sleep_health/#1-introduction","title":"1. Introduction","text":"<p>Dalam project ini kita akan menganalisa faktor-faktor yang dapat mempengaruhi kualitas tidur (sleep quality) seseorang. Informasi ini dapat digunakan untuk memberikan saran dan rekomendasi kepada individu atau kelompok untuk meningkatkan kebiasaan tidur mereka dan mencapai tidur yang lebih berkualitas.</p>"},{"location":"statistics/sleep_health/#11-data-sources","title":"1.1 Data sources","text":"<p>Dataset dalam project ini diambil dari Sleep Health and Lifestyle Dataset di kaggle. Dataset dapat dilihat pada link ini.</p>"},{"location":"statistics/sleep_health/#12-define-the-problem","title":"1.2 Define the problem","text":"<ul> <li>Variabel manakah pada data yang mempunyai pengaruh terhadap <code>Sleep Quality</code>?</li> <li>Apakah variabel <code>Gender</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</li> <li>Apakah variabel <code>Age</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</li> <li>Apakah variabel <code>Occupation</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</li> <li>Apakah variabel <code>Sleep Duration</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</li> <li>Apakah variabel <code>Physical Activity Level</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</li> <li>Apakah variabel <code>Stress Level</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</li> <li>Apakah variabel <code>BMI Category</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</li> <li>Apakah variabel <code>Blood Pressure</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</li> <li>Apakah variabel <code>Heart Rate</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</li> <li>Apakah variabel <code>Daily Step</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</li> <li>Bagaimana kesimpulan akhirnya? dan rekomendasi apakah yang dapat dilakukan?</li> </ul>"},{"location":"statistics/sleep_health/#2-exploratory-data-analysis","title":"2. Exploratory data analysis","text":""},{"location":"statistics/sleep_health/#21-numerical-variable","title":"2.1. Numerical variable","text":"<p>Pertama, kita akan melihat distribusi dan hubungan dari masing-masing numerical variable</p> <p></p> <p>Kemudian, kita akan berapa nilai koefisien korelasi dari setiap numerical variable</p> <p></p> <p>Berdasarkan <code>pairplot</code> dan <code>histmap</code> di atas, maka dapat diambil kesimpulan sebagai berikut:</p> <ol> <li><code>Sleep Quality</code> mempunyai korelasi yang kuat dengan <code>Sleep Duration</code></li> <li><code>Sleep Quality</code> mempunyai korelasi terbalik yang kuat dengan <code>Stress Level</code></li> <li><code>Sleep Quality</code> mempunyai korelasi terbalik yang cukup kuat dengan <code>Hearth Rate</code></li> </ol>"},{"location":"statistics/sleep_health/#22-categorical-variable","title":"2.2 Categorical variable","text":""},{"location":"statistics/sleep_health/#221-distribusi-by-gender","title":"2.2.1 Distribusi by <code>Gender</code>","text":"<p>Berdasarkan boxplot <code>Gender</code> terhadap <code>Sleep Quality</code>, <code>Female</code> cenderung mempunyai <code>Sleep Quality</code> yang lebih baik dibandingkan dengan <code>Male</code></p>"},{"location":"statistics/sleep_health/#222-distribusi-by-occupation","title":"2.2.2 Distribusi by <code>Occupation</code>","text":"<p>Berdasarkan boxplot <code>Occupation</code> terhadap <code>Sleep Quality</code>, maka:</p> <ol> <li><code>Scienteist</code> cenderung mempunyai <code>Sleep Quality</code> yang rendah</li> <li><code>Software Engineer</code> cenderung mempunyai <code>Sleep Quality</code> yang sedang</li> <li><code>Nurse</code> cenderung mempunyai <code>Sleep Quality</code> dari sedang hingga baik</li> <li><code>Engineer</code> cenderung mempunyai <code>Sleep Quality</code> yang baik</li> </ol>"},{"location":"statistics/sleep_health/#223-distribusi-by-bmi-category","title":"2.2.3 Distribusi by <code>BMI Category</code>","text":"<p>Berdasarkan boxplot <code>BMI Category</code> terhadap <code>Sleep Quality</code>, semakin normal <code>BMI Category</code> seseorang, maka cenderung semakin baik <code>Sleep Quality</code>-nya (<code>Normal</code> &gt; <code>Overweight</code> &gt; <code>Obese</code>)</p>"},{"location":"statistics/sleep_health/#3-statistical-test","title":"3. Statistical test","text":""},{"location":"statistics/sleep_health/#31-statistical-test-gender","title":"3.1 Statistical test <code>Gender</code>","text":"<p>Kita akan menguji apakah ada perbedaan signifikan antara jenis kelamin laki-laki dan perempuan pada variable <code>Gender</code> dalam menentukan <code>Sleep Quality</code>. Karena tedapat 2 kategori, kita akan melakukan uji t 2 sample independent. Dengan hasil sebagai berikut:</p> <pre><code>Banyak sampel untuk laki-laki = 189\nBanyak sampel untuk perempuan = 185\n==================================================\nHipotesis dan taraf signifikansi:\nH0 : \u03bc male - \u03bc female &lt;= 0\nH1 : \u03bc male - \u03bc female &gt; 0\nalpha = 0.05\n==================================================\nStatistik hitung = -5.874547760454642\nP value = 4.708223266344652e-09\n</code></pre> <p>Kesimpulan : Berdasarkan hasil uji statistik di atas, nilai p-value yang diperoleh &lt; 0.05, sehingga diambil keputusan untuk menolak H0, yang artinya ada perbedaan signifikan <code>Sleep Quality</code> antara Laki-laki dan Perempuan</p>"},{"location":"statistics/sleep_health/#31-statistical-test-occupation","title":"3.1 Statistical test <code>Occupation</code>","text":"<p>Kita akan menguji apakah ada perbedaan signifikan dari kategori di dalam variable <code>Occupation</code> dalam menentukan <code>Sleep Quality</code>. Karena terdapat lebih dari 2 kategori, kita akan melakukan uji ANOVA. Dengan hasil sebagai berikut:</p> <pre><code>Hipotesis dan taraf signifikansi:\nH0 : \u03bc software_engineer = \u03bc doctor = \u03bc sales_representative = \u03bc teacher = \u03bc nurse = \u03bc engineer = \u03bc accountant = \u03bc scientiest = \u03bc lawyer = \u03bc salesperson = \u03bc manager\nH1 : Setidaknya terdapat satu yang berbeda\nalpha = 0.05\n==================================================\nHasil dari uji ANOVA:\n               df      sum_sq    mean_sq          F        PR(&gt;F)\nOccupation   10.0  241.907020  24.190702  30.022167  6.393557e-42\nResidual    363.0  292.491376   0.805761        NaN           NaN\n</code></pre> <p>Kesimpulan : Berdasarkan hasil uji statistik di atas, nilai p-value yang diperoleh &lt; 0.05, sehingga diambil keputusan untuk menolak H0. yang artinya setidaknya ada perbedaan signifikan <code>Sleep Quality</code> pada salah satu bidang <code>Occupation</code></p>"},{"location":"statistics/sleep_health/#31-statistical-test-bmi-category","title":"3.1 Statistical test <code>BMI Category</code>","text":"<p>Kita akan menguji apakah ada perbedaan signifikan dari kategori di dalam variable <code>BMI Category</code> dalam menentukan <code>Sleep Quality</code>. Karena terdapat lebih dari 2 kategori, kita akan melakukan uji ANOVA. Dengan hasil sebagai berikut:</p> <pre><code>Hipotesis dan taraf signifikansi:\nH0 : \u03bc normal = \u03bc overweight = \u03bc obese\nH1 : Setidaknya terdapat satu yang berbeda\nalpha = 0.05\n==================================================\nHasil dari uji ANOVA:\n                      df      sum_sq    mean_sq          F        PR(&gt;F)\nQ('BMI Category')    2.0   56.685333  28.342666  22.011391  9.257969e-10\nResidual           371.0  477.713063   1.287636        NaN           NaN\n</code></pre> <p>Kesimpulan : Berdasarkan hasil uji statistik di atas, nilai p-value yang diperoleh &lt; 0.05, sehingga diambil keputusan untuk menolak H0. yang artinya setidaknya ada perbedaan signifikan <code>Sleep Quality</code> pada salah satu <code>BMI Category</code></p>"},{"location":"statistics/sleep_health/#4-regression-model","title":"4. Regression model","text":"<p>Berdasarkan hasil EDA dan pengujian statistik sebelumnya, kita mengetahui bahwa terdapat beberapa variabel yang signifikan memengaruhi <code>Sleep Quality</code>.Variabel yang akan kita gunakan dalam model regresi yaitu:</p> <ul> <li><code>Sleep Duration</code></li> <li><code>Stress Level</code></li> <li><code>Hearth Rate</code></li> <li><code>Gender</code></li> <li><code>Occupation</code></li> <li><code>BMI Category</code></li> </ul> <pre><code>                            OLS Regression Results\n==============================================================================\nDep. Variable:     Q('Sleep Quality')   R-squared:                       0.941\nModel:                            OLS   Adj. R-squared:                  0.938\nMethod:                 Least Squares   F-statistic:                     354.4\nDate:                Sat, 08 Jul 2023   Prob (F-statistic):          6.91e-208\nTime:                        16:04:00   Log-Likelihood:                -68.895\nNo. Observations:                 374   AIC:                             171.8\nDf Residuals:                     357   BIC:                             238.5\nDf Model:                          16\nCovariance Type:            nonrobust\n======================================================================================================\n                                         coef    std err          t      P&gt;|t|      [0.025      0.975]\n------------------------------------------------------------------------------------------------------\nIntercept                             10.1898      0.701     14.528      0.000       8.810      11.569\nGender[T.Male]                         0.0417      0.064      0.647      0.518      -0.085       0.168\nOccupation[T.Doctor]                  -0.3869      0.097     -4.009      0.000      -0.577      -0.197\nOccupation[T.Engineer]                -0.2165      0.078     -2.769      0.006      -0.370      -0.063\nOccupation[T.Lawyer]                   0.0126      0.093      0.136      0.892      -0.170       0.196\nOccupation[T.Manager]                 -0.3716      0.312     -1.189      0.235      -0.986       0.243\nOccupation[T.Nurse]                   -0.0718      0.080     -0.897      0.371      -0.229       0.086\nOccupation[T.Sales Representative]    -1.7958      0.258     -6.956      0.000      -2.303      -1.288\nOccupation[T.Salesperson]             -0.7231      0.107     -6.774      0.000      -0.933      -0.513\nOccupation[T.Scientist]               -1.1075      0.181     -6.135      0.000      -1.462      -0.752\nOccupation[T.Software Engineer]       -0.5492      0.170     -3.236      0.001      -0.883      -0.215\nOccupation[T.Teacher]                 -0.9185      0.084    -10.909      0.000      -1.084      -0.753\nQ('BMI Category')[T.Obese]             0.4917      0.198      2.488      0.013       0.103       0.880\nQ('BMI Category')[T.Overweight]        0.0903      0.064      1.419      0.157      -0.035       0.215\nQ('Sleep Duration')                    0.4602      0.051      9.029      0.000       0.360       0.560\nQ('Stress Level')                     -0.3204      0.031    -10.457      0.000      -0.381      -0.260\nQ('Heart Rate')                       -0.0598      0.011     -5.671      0.000      -0.080      -0.039\n==============================================================================\nOmnibus:                       49.293   Durbin-Watson:                   1.407\nProb(Omnibus):                  0.000   Jarque-Bera (JB):              275.426\nSkew:                          -0.343   Prob(JB):                     1.56e-60\nKurtosis:                       7.148   Cond. No.                     3.31e+03\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n[2] The condition number is large, 3.31e+03. This might indicate that there are\nstrong multicollinearity or other numerical problems.\n</code></pre> <p>Dari hasil summary di atas, ada beberapa variable yang tidak signifikan:</p> <ul> <li><code>Gender</code> tidak signifikan -&gt; keluarkan dari variable</li> <li><code>Ocuupation</code>(<code>Lawyer</code>, <code>Manager</code>, dan <code>Nurse</code>) tidak signifikan.<ul> <li><code>Lawyer</code> &amp; <code>Nurse</code> -&gt; tetap, karena jumlah datanya cukup banyak dan tidak ada kategori yang serupa untuk digabung</li> <li><code>Manager</code> -&gt; hapus, karena jumlah datanya hanya 1</li> </ul> </li> <li><code>BMI Category</code>(<code>Overweight</code>) tidak signifikan -&gt; digabung dengan BMI Normal, sehingga kategori di <code>BMI Category</code> hanya tinggal <code>Normal</code> dan <code>Obese</code></li> </ul> <pre><code>                            OLS Regression Results\n==============================================================================\nDep. Variable:     Q('Sleep Quality')   R-squared:                       0.940\nModel:                            OLS   Adj. R-squared:                  0.938\nMethod:                 Least Squares   F-statistic:                     435.4\nDate:                Sat, 08 Jul 2023   Prob (F-statistic):          1.13e-210\nTime:                        16:04:00   Log-Likelihood:                -70.491\nNo. Observations:                 373   AIC:                             169.0\nDf Residuals:                     359   BIC:                             223.9\nDf Model:                          13\nCovariance Type:            nonrobust\n======================================================================================================\n                                         coef    std err          t      P&gt;|t|      [0.025      0.975]\n------------------------------------------------------------------------------------------------------\nIntercept                             10.1533      0.687     14.773      0.000       8.802      11.505\nOccupation[T.Doctor]                  -0.3693      0.078     -4.734      0.000      -0.523      -0.216\nOccupation[T.Engineer]                -0.2021      0.070     -2.879      0.004      -0.340      -0.064\nOccupation[T.Lawyer]                   0.0404      0.071      0.567      0.571      -0.100       0.180\nOccupation[T.Nurse]                   -0.0113      0.064     -0.175      0.861      -0.138       0.116\nOccupation[T.Sales Representative]    -1.7729      0.252     -7.024      0.000      -2.269      -1.277\nOccupation[T.Salesperson]             -0.6178      0.078     -7.917      0.000      -0.771      -0.464\nOccupation[T.Scientist]               -1.0501      0.172     -6.118      0.000      -1.388      -0.713\nOccupation[T.Software Engineer]       -0.5053      0.161     -3.146      0.002      -0.821      -0.189\nOccupation[T.Teacher]                 -0.8535      0.073    -11.713      0.000      -0.997      -0.710\nQ('BMI Category')[T.Obese]             0.4693      0.196      2.395      0.017       0.084       0.855\nQ('Sleep Duration')                    0.4578      0.051      8.980      0.000       0.358       0.558\nQ('Stress Level')                     -0.3177      0.031    -10.379      0.000      -0.378      -0.257\nQ('Heart Rate')                       -0.0589      0.010     -5.694      0.000      -0.079      -0.039\n==============================================================================\nOmnibus:                       60.562   Durbin-Watson:                   1.377\nProb(Omnibus):                  0.000   Jarque-Bera (JB):              345.159\nSkew:                          -0.506   Prob(JB):                     1.12e-75\nKurtosis:                       7.603   Cond. No.                     3.22e+03\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n[2] The condition number is large, 3.22e+03. This might indicate that there are\nstrong multicollinearity or other numerical problems.\n</code></pre>"},{"location":"statistics/sleep_health/#5-conclusion-and-recommendation","title":"5. Conclusion and recommendation","text":"<p>Setelah dilakukan analisis statistik, kita mendapatkan beberapa insight yang di mana dapat menjawab beberapa pertanyaan yang telah disebutkan sebelumnnya</p> <ul> <li> <p>Variabel manakah pada data yang mempunyai pengaruh terhadap <code>Sleep Quality</code>?</p> <p>Berdasarkan hasil analisa di atas, terdapat 5 faktor yang dapat mempengaruhi <code>Sleep Quality</code> yaitu:</p> <ol> <li><code>Sleep Duration</code> -&gt; Semakin lama tidur, maka cenderung semaik baik <code>Sleep Quality</code>-nya</li> <li><code>Stress Level</code> -&gt; Semakin tinggi stress level seseorang, maka akan semakin jelek <code>Sleep Quality</code>-nya</li> <li><code>Heart Rate</code> -&gt; Semakin tinggi heart rate seseorang, maka akan semakin jelek juga <code>Sleep Quality</code>-nya</li> <li><code>Occupation</code> -&gt; Pekerjaan juga berpengaruh terhadap sleep quality, Engineer cenderung memiliki <code>Sleep Quality</code> yang baik, software engineer cenderung memeiliki <code>Sleep Quality</code> yang sedang, scientist cenderung memiliki <code>Sleep Quality</code> yang jelek</li> <li><code>BMI Category</code> -&gt; Seseorang dengan BMI normal cenderung memiliki sleep quality yang lebih baik dibandingkan dengan seseorang yang obesitas'</li> </ol> </li> <li> <p>Apakah variabel <code>Gender</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</p> <p>Dari hasil OLS, <code>Gender</code> tidak mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>, ditandai dengan nilai p-value sebesar 0.518 yang artinya perbedaan <code>Gender</code> baik <code>Male</code> maupun <code>Female</code> tidak berpengaruh signifikan terhadap <code>Sleep Quality</code></p> </li> <li> <p>Apakah variabel <code>Age</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</p> <p>Dari hasil EDA, <code>Age</code> mempunyai hubungan yang kurang kuat dengan <code>Sleep Quality</code>, ditandai dengan nilai koefisien korelasi sebesar 0.47</p> </li> <li> <p>Apakah variabel <code>Occupation</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</p> <p>Dari tes ANOVA, <code>Occupation</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>, ditandai dengan nilai p-value sebesar kurang dari 0.05 yang artinya setidaknya ada satu kategori yang berpengaruh signifikan</p> </li> <li> <p>Apakah variabel <code>Sleep Duration</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</p> <p>Dari hasil EDA, <code>Sleep Duration</code> mempunyai hubungan sangat kuat dengan <code>Sleep Quality</code>, ditandai dengan nilai koefisien korelasi sebesar 0.88</p> </li> <li> <p>Apakah variabel <code>Physical Activity Level</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</p> <p>Dari hasil EDA, <code>Physical Activity Level</code> mempunyai hubungan yang tidak kuat dengan <code>Sleep Quality</code>, ditandai dengan nilai koefisien korelasi sebesar 0.19</p> </li> <li> <p>Apakah variabel <code>Stress Level</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</p> <p>Dari hasil EDA, <code>Stress Level</code> mempunyai hubungan yang sangat kuat namun berkebalikan dengan <code>Sleep Quality</code>, ditandai dengan nilai koefisien korelasi sebesar -0.9</p> </li> <li> <p>Apakah variabel <code>BMI Category</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</p> <p>Dari tes ANOVA, <code>BMI Category</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>, ditandai dengan nilai p-value sebesar kurang dari 0.05 yang artinya setidaknya ada satu kategori yang berpengaruh signifikan</p> </li> <li> <p>Apakah variabel <code>Blood Pressure</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</p> <p>Dari hasil EDA, <code>Blood Pressure</code> baik high maupun low tidak mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>, ditandai dengan nilai koefisien korelasi sebesar -0.12 dan -0.11</p> </li> <li> <p>Apakah variabel <code>Heart Rate</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</p> <p>Dari hasil EDA, <code>Heart Rate</code> mempunyai hubungan yang kuat namun berkebalikan dengan <code>Sleep Quality</code>, ditandai dengan nilai koefisien korelasi sebesar -0.66</p> </li> <li> <p>Apakah variabel <code>Daily Step</code> mempunyai hubungan yang kuat dengan <code>Sleep Quality</code>?</p> <p>Dari hasil EDA, <code>Daily Step</code> mempunyai hubungan yang tidak kuat dengan <code>Sleep Quality</code>, ditandai dengan nilai koefisien korelasi sebesar 0.017</p> </li> <li> <p>Bagaimana kesimpulan akhirnya? dan rekomendasi apakah yang dapat dilakukan?</p> <p>Ada 5 faktor yang mempengaruhi sleep quality sesorang, yaitu <code>Sleep Duration</code>, <code>Stress Level</code>, <code>Heart Rate</code>, <code>Occupation</code>, dan <code>BMI Category</code>. Hal-hal yang dapat dilakukan untuk meningkatkan <code>Sleep Quality</code> adalah:</p> <ol> <li>Menambah jam tidur sesuai dengan standar jam tidur manusia sesuai usia</li> <li>Mengurangi tingkat strees (berhubungan juga dengan heart rate), baik itu dengan berlibur atau olah raga ringan setiap hari</li> <li>Mengurangi berat badan bagi yang obesitas, hal ini dapat dilakukan dengan menjaga pola hidup sehat</li> </ol> </li> </ul>"},{"location":"statistics/sleep_health/#reference","title":"Reference","text":"<ul> <li>Simulasi Final Project - Asistensi Kelas Statistics for Business Pacmann</li> <li>Relationship B/W \ud83d\ude34 and BMI depends on Age?</li> </ul>"},{"location":"statistics/sleep_health/#sorce-code","title":"Sorce code","text":"<ul> <li>sleep health analysis</li> </ul>"}]}